package gofullmethods

import (
	"text/template"
)

const (
	// template body for generating golang code
	golangCodeTemplateBody = `
// Code generated by protoc-gen-gofullmethods. DO NOT EDIT.
// source: {{ .FileName }}

package {{ .GoPackage }}

const (
{{- range $service := .Services }}
{{- range $method := $service.Methods }}
	{{ $service.Name }}_{{ $method }} = "/{{ $.Package }}.{{ $service.Name }}/{{ $method }}"
{{- end}}
{{- end}}
)

var (
	FullMethods = []string{{ "{" }}
{{- range $service := .Services }}
{{- range $method := $service.Methods }}
		{{ $service.Name }}_{{ $method }},
{{- end}}
{{- end}}
	{{ "}" }}
)
`
)

var (
	// template for generating golang code
	golangCodeTemplate = template.Must(template.New("golangCodeTemplate").Parse(golangCodeTemplateBody))
)

// service represents grpc service which will be passed to template
type service struct {
	Name    string
	Methods []string
}

// service represents proto file which will be passed to template
type data struct {
	FileName  string
	GoPackage string
	Package   string
	Services  []service
}
